<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>client_setup_connection();
socket = client_connect();

buffer = buffer_create(8, buffer_grow, 1);

connection_attempts = 1;

globalvar GLOBAL_connected;
GLOBAL_connected = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(find("type")) {

    // a connection attempt with server succeeded/failed
    case network_type_non_blocking_connect: {
        if (find("succeeded")) {
            GLOBAL_connected = true;
            client_send_request(socket, buffer,
                                    R_IDENTIFICATION);
        } else {
            if (connection_attempts ==
                MAX_CONNECTION_ATTEMPTS) exit;
            network_destroy(socket);
            socket = client_connect();
            connection_attempts++;
        }
    } break;
    
    case network_type_data: {
        client_handle_response(find("buffer"));
    } break;
    
    // TO-DO
    default: {
        show_message("???");
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (room) {

    // draw connection info
    case rm_client: {
        if (GLOBAL_connected) {
            draw_sprite(spr_tick, image_index,
                        room_width/2-40, room_height/2);
            draw_text(room_width/2-20, room_height/2,
                        "Connected!");
        } else {
            if (connection_attempts == MAX_CONNECTION_ATTEMPTS) {
                draw_sprite(spr_cross, image_index,
                room_width/2-40, room_height/2);
                draw_text(room_width/2-20, room_height/2,
                            "Failed to connect to server.");
            } else {
                draw_sprite(spr_loading, image_index,
                            room_width/2-40, room_height/2);
                draw_text(room_width/2-20, room_height/2,
                            "Attempting to connect ("
                            + string(connection_attempts)
                            + ")...");
            }
        }
    } break;
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
