<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!debug_mode) exit;

UT_tests = ds_map_create(); // Map containg all registered tests
UT_succeeded_tests = 0; // For counting the number of failed/succeeded tests
UT_completed_tests = 0;

/***************************************************************************/
/*                      ADD UNIT TESTS HERE                                */
/***************************************************************************/

ds_map_add(UT_tests, "Buffer resizing system", UT_client_buffer_write);
ds_map_add(UT_tests, "Packet collector: adding packets", UT_packet_collector_add_packet);
ds_map_add(UT_tests, "Packet collector: finding message", UT_packet_collector_find_message);

/***************************************************************************/

// run tests and generate output
show_debug_message("----------------------------------------------------------------");
show_debug_message("            PERFORMING UNIT TESTS");
show_debug_message("");
var size = ds_map_size(UT_tests);
var current_key = ds_map_find_last(UT_tests);
for (var i = 0; i &lt; size; i++) {
    script_execute(ds_map_find_value(UT_tests, current_key), current_key);
    current_key = ds_map_find_previous(UT_tests, current_key);
}
show_debug_message("");
show_debug_message("   "+string(UT_succeeded_tests)+"/"+string(UT_completed_tests)+" unit tests completed without errors.");
show_debug_message("----------------------------------------------------------------");

// done, no need for for instances of this object to take up space any longer
ds_map_destroy(UT_tests);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// destroy the map to free up used memory
ds_map_destroy(UT_tests);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
